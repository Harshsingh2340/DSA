#include <stdio.h>
#include <stdlib.h>

#define MAX_SIZE 100

typedef struct {
    int arr[MAX_SIZE];
    int top;
} Stack;

void initStack(Stack* stack) {
    stack->top = -1;
}

int isFull(Stack* stack) {
    return stack->top == MAX_SIZE - 1;
}

int isEmpty(Stack* stack) {
    return stack->top == -1;
}

void push(Stack* stack, int value) {
    if (isFull(stack)) {
        printf("Stack is full, cannot push.\n");
        return;
    }
    stack->top++;
    stack->arr[stack->top] = value;
}

int pop(Stack* stack) {
    if (isEmpty(stack)) {
        printf("Stack is empty, cannot pop.\n");
        return -1; // Or any suitable error value
    }
    int value = stack->arr[stack->top];
    stack->top--;
    return value;
}

int peek(Stack* stack) {
    if (isEmpty(stack)) {
        printf("Stack is empty, cannot peek.\n");
        return -1; // Or any suitable error value
    }
    return stack->arr[stack->top];
}

int main() {
    Stack stack;
    initStack(&stack);

    push(&stack, 10);
    push(&stack, 20);
    push(&stack, 30);

    printf("Top element: %d\n", peek(&stack));

    int value = pop(&stack);
    printf("Popped element: %d\n", value);

    push(&stack, 40);

    printf("Stack elements: ");
    while (!isEmpty(&stack)) {
        printf("%d ", pop(&stack));
    }
    printf("\n");

    return 0;
}
